plugins {
	id "checkstyle"
	id "java-gradle-plugin"
	id "io.spring.javaformat" version "$javaFormatVersion"
}

repositories {
	gradlePluginPortal()
	mavenCentral()
}

dependencies {
	api(platform("org.junit:junit-bom:${junitVersion}"))
	checkstyle("com.puppycrawl.tools:checkstyle:${checkstyle.toolVersion}")
	checkstyle("io.spring.javaformat:spring-javaformat-checkstyle:${javaFormatVersion}")

	implementation("com.github.ben-manes:gradle-versions-plugin:$gradleVersionsPluginVersion")
	implementation("io.spring.gradle.nullability:nullability-plugin:$nullabilityPluginVersion")
	implementation("io.spring.javaformat:spring-javaformat-gradle-plugin:$javaFormatVersion")

	testImplementation("org.junit.jupiter:junit-jupiter")
	testImplementation("org.assertj:assertj-core:${assertJVersion}")
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

gradlePlugin {
	plugins {
		conventionsPlugin {
			id = "org.springframework.ws.conventions"
			implementationClass = "org.springframework.ws.gradle.conventions.ConventionsPlugin"
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
